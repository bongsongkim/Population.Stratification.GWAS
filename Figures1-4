   install.packages("qqman")
   install.packages("RCurl")                  

   library(qqman)
   require(RCurl)

   snp <- read.csv(text=getURL("http://bioinfo.noble.org/GWASPRO/static/demo/Maize_geno.csv"),row.names=1)   
   snp <- t(snp)

   phe <- read.csv(text=getURL("http://bioinfo.noble.org/GWASPRO/static/demo/Maize_pheno_pca.csv"),header=T)      
   phe <- phe[-1 * which(phe$SHL < 5 | phe$SHL > 30),]
   
   id1 <- rownames(snp)
   id2 <- phe$rs 

   snp <- snp[match(id2,id1),]


################
   phe <- read.csv(text=getURL("https://raw.githubusercontent.com/bongsongkim/Population.Structure.GWAS/master/Data/rice_phenotype.csv"),header=T)
   pca   <- read.csv(text=getURL("https://raw.githubusercontent.com/bongsongkim/Population.Structure.GWAS/master/Data/pca.csv"),header=T) 
   geno1 <- read.csv(text=getURL("https://raw.githubusercontent.com/bongsongkim/Population.Structure.GWAS/master/Data/rice_geno_1.csv"),header=F)   
   geno2 <- read.csv(text=getURL("https://raw.githubusercontent.com/bongsongkim/Population.Structure.GWAS/master/Data/rice_geno_2.csv"),header=F)
   snp <- cbind(geno1,geno2)
 
 
   
 
   id1 <- snp[,1]
   id2 <- phe$NSFTVID 
   id3 <- pca$NSFTV.ID
   
   snp <- snp[match(id3,id1),]
   phe <- phe[match(id3,id1),]
   
   snp <- snp[which(is.na(phe$Protein.content) == FALSE),]
   phe <- phe[which(is.na(phe$Protein.content) == FALSE),]
   pca <- pca[which(is.na(phe$Protein.content) == FALSE),]

#   snp <- snp[which(is.na(phe$Plant.height) == FALSE),]
#   phe <- phe[which(is.na(phe$Plant.height) == FALSE),]
#   pca <- pca[which(is.na(phe$Plant.height) == FALSE),]


   vec <- NULL
   cnt <- 0
   for (i in 2:dim(snp)[2]){
      tmp0 <- NULL
      tmp1 <- NULL
      tmp2 <- NULL
      tmp0 <- length(which(snp[,i] == 0))/dim(snp)[1]
      tmp1 <- length(which(snp[,i] == 1))/dim(snp)[1]
      tmp2 <- length(which(snp[,i] == 2))/dim(snp)[1]

      if (tmp0 != 0 && tmp0 < 0.2)
         next

      if (tmp1 != 0 && tmp1 < 0.2)
         next
      
      if (tmp2 != 0 && tmp2 < 0.2)
         next

      cnt <- cnt + 1
      vec[cnt] <- i
   }
   snp <- snp[,vec]

  pc1 <- pca$PC1
  pc2 <- pca$PC2
  pc3 <- pca$PC3

  adj.phe <- NULL  
  pc11 <- NULL
  pc22 <- NULL
  pc33 <- NULL

  cnt  <- 0
  corr <- NULL

  for (i in 2:dim(snp)[2]){
      res <- lm(phe$Protein.content ~ 1 + as.factor(snp[,i]) + pc1 + pc2 + pc3)

#      res <- lm(phe$Plant.height ~ 1 + as.factor(snp[,i]) + pc1 + pc2 + pc3)     
      cnt <- cnt + 1

      pc11[cnt] <- summary(res)[[4]][3,4]
      pc22[cnt] <- summary(res)[[4]][4,4]
      pc33[cnt] <- summary(res)[[4]][5,4]

     adj.phe <- phe$Protein.content - pc11[cnt]*pc1 - pc22[cnt]*pc2 - pc33[cnt]*pc3           
     corr[cnt] <- cor(phe$Protein.content,adj.phe)

#      adj.phe <- phe$Plant.height - pc11[cnt]*pc1 - pc22[cnt]*pc2 - pc33[cnt]*pc3           
#      corr[cnt] <- cor(phe$Plant.height,adj.phe)
  }
  
#######################################################################################

#### Figure 1

  par(mfrow=c(3,1))
  par(mar=c(4,4,2,1))   
  plot(pc11,type="l",xlab="",ylab="Coefficient for PCA1",main="Estimated coefficients for PCA1 variable")
  plot(pc22,type="l",xlab="",ylab="Coefficient for PCA2",main="Estimated coefficients for PCA2 variable")
  plot(pc33,type="l",xlab="",ylab="Coefficient for PCA3",main="Estimated coefficients for PCA3 variable")

#### Figure 2
  plot(corr,pch=20,xlab="",ylab="Correlation between phenotype and adjusted phenotype",cex.lab=1.0,main="Variation among adjusted phenotypes resulting across all SNPs",cex.main=1.4,type="l")

#### Figure 3
  par(mfrow=c(2,1))

#### Figure 3A 
  y    <- phe$Protein.content

#  y    <- phe$Plant.height
  p_val1 <- NULL  
  cnt    <- 0
  for (i in 1:dim(snp)[2]){
      cnt <- cnt + 1
      res <- lm(as.numeric(y) ~ 1 + as.factor(snp[,i]))
      p_val1[cnt] <- summary(res)[[4]][2,4]
  }

#### Figure 3B
  y    <- phe$Protein.content

#  y    <- phe$Plant.height
  p_val2 <- NULL  
  cnt    <- 0
  for (i in 1:dim(snp)[2]){
      cnt <- cnt + 1
      res <- lm(as.numeric(y) ~ 1 + as.factor(snp[,i]) + pc1 + pc2 + pc3)
      p_val2[cnt] <- summary(res)[[4]][2,4]
  }
  par(mfrow=c(2,1))
  plot(-log10(p_val1),pch=20,xlab="",ylab="-log10(P)",cex.lab=1.2,main="y = µ + SNP + e",cex.main=1.4)
  plot(-log10(p_val2),pch=20,xlab="",ylab="-log10(P)",cex.lab=1.2,main="y = µ + SNP + PCA1 + PCA2 + PCA3 + e",cex.main=1.4)

#### Figure 4
  plot(-log10(p_val1),-log10(p_val2),ylab="-log10(P) for Figure 3C",xlab="-log10(P) for Figure 3G")

  

#### Figure 3B 
#  qq(p_val1)
#### Figure 3C 
#  pvalues <- p_val1
#  chisq <- qchisq(pvalues,1,lower.tail=FALSE)
#  lambda <- median(chisq)/qchisq(0.5,1)
#  newchisq <- chisq/lambda
#  newpvalues1 <- pchisq(newchisq, df=1,lower.tail=FALSE)
#  plot(-log10(newpvalues1),pch=20,xlab="",ylab="-log10(P)",cex.lab=1.2,main="y = µ + SNP + e (Genomic inflation factor = 1.000)",cex.main=1.4)
#### Figure 3D 
#  qq(newpvalues1)
#### Figure 3F
#  qq(p_val2)
#### Figure 3G
#  pvalues <- p_val2
#  chisq <- qchisq(pvalues,1,lower.tail=FALSE)
#  lambda <- median(chisq)/qchisq(0.5,1)
#  newchisq <- chisq/lambda
#  newpvalues2 <- pchisq(newchisq, df=1,lower.tail=FALSE)
#  plot(-log10(newpvalues2),pch=20,xlab="",ylab="-log10(P)",cex.lab=1.2,main="y = µ + SNP + PCA1 + PCA2 + PCA3 + e (Genomic inflation factor = 1.000)",cex.main=1.4)
#### Figure 3H 
#  qq(newpvalues2)

